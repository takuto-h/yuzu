
open Printf

type t:
  def Con(Literal.t)
  def Var(Names.val_name)
  def Variant(Names.ctor * list(t))
  def Tuple(list(t))

def show(pat):
  match(pat)
  case Con(lit):
    sprintf("Con(%s)", Literal.show(lit))
  case Var(name):
    sprintf("Var(%s)", Names.show_val_name(name))
  case Variant(ctor,pat_list):
    sprintf("Variant(%s)", Names.show_ctor(ctor))
  case Tuple(pat_list):
    sprintf("Tuple()")
