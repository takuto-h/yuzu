
type raw:
  def Expr(Expr.t)
  def LetVal(Pattern.t * Expr.t)
  def LetFun(list(Names.val_name * Expr.t))
  def Open(Names.mod_path)
  def Type(list(Names.typector_name * TypeInfo.t))
  def Exception(Names.ctor_name * option(TypeExpr.t))

type t:
  pos : Pos.t
  raw : raw

def at(pos, raw): {
  pos = pos;
  raw = raw;
}
