
type unit
type int
type bool
type string

type option(`a):
  def None
  def Some(`a)

type list(`a):
  def $([])
  def $(::)(`a * list(`a))

val $(+) : int -> int -> int
val $(-) : int -> int -> int
val $(*) : int -> int -> int
val $(=) : `a -> `a -> bool
val $(||) : bool -> bool -> bool
val $(&&) : bool -> bool -> bool

type in_channel

val open_in : string -> in_channel
val close_in : in_channel -> unit
val close_in_noerr : in_channel -> unit

type out_channel

val open_out : string -> out_channel
val close_out : out_channel -> unit
val close_out_noerr : out_channel -> unit

type exn
exception Exit
exception Not_found
exception Failure(string)
exception Invalid_argument(string)

val raise : exn -> `a
