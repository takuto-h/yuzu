
rec:
  type t:
    pos : Pos.t
    raw : raw

  type raw:
    def Con(Literal.t)
    def Var(Names.val_path * ref(unit))
    def Abs(Pattern.t * t)
    def App(t * t)
    def Ctor(Names.ctor * option(t))
    def If(t * t * t)
    def Tuple(list(t))
    def Or(t * t)
    def And(t * t)
    def Seq(t * t)
    def LetVal(Pattern.t * t * t)
    def LetFun(list(Names.val_name * t) * t)
    def Match(t * list(Pattern.t * option(t) * t))
    def Try(t * list(Pattern.t * option(t) * t))
    def Record(list(Names.val_path * t))
    def Update(t * list(Names.val_path * t))
    def Field(t * Names.val_path)
    def Assign(t * Names.val_path * t)

def at(pos, raw): {
  pos = pos;
  raw = raw;
}
